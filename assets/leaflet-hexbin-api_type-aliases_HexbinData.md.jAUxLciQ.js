import{_ as e,c as t,o,aJ as r}from"./chunks/framework.BvC-JhCI.js";const h=JSON.parse('{"title":"Type Alias: HexbinData<Data>","description":"","frontmatter":{},"headers":[],"relativePath":"leaflet-hexbin-api/type-aliases/HexbinData.md","filePath":"leaflet-hexbin-api/type-aliases/HexbinData.md"}'),n={name:"leaflet-hexbin-api/type-aliases/HexbinData.md"};function i(l,a,d,c,s,p){return o(),t("div",null,a[0]||(a[0]=[r('<p><a href="./../globals.html">leaflet-hexbin</a> / HexbinData</p><h1 id="type-alias-hexbindata-data" tabindex="-1">Type Alias: HexbinData&lt;Data&gt; <a class="header-anchor" href="#type-alias-hexbindata-data" aria-label="Permalink to &quot;Type Alias: HexbinData\\&lt;Data\\&gt;&quot;">​</a></h1><blockquote><p><strong>HexbinData</strong>&lt;<code>Data</code>&gt;: <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/lsdch/leaflet-hexbin/blob/b3db042a3141108eeab0978b57883d6ccab557d2/packages/leaflet-hexbin/src/HexbinLayer.ts#L112" target="_blank" rel="noreferrer">HexbinLayer.ts:112</a></p><p>Hexbin data attached to each hexagon, once binned.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Data</strong></p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="data" tabindex="-1">data <a class="header-anchor" href="#data" aria-label="Permalink to &quot;data&quot;">​</a></h3><blockquote><p><strong>data</strong>: <code>Data</code></p></blockquote><h3 id="coord" tabindex="-1">coord <a class="header-anchor" href="#coord" aria-label="Permalink to &quot;coord&quot;">​</a></h3><blockquote><p><strong>coord</strong>: <code>L.LatLngExpression</code></p></blockquote><h3 id="point" tabindex="-1">point <a class="header-anchor" href="#point" aria-label="Permalink to &quot;point&quot;">​</a></h3><blockquote><p><strong>point</strong>: <code>Readonly</code>&lt;<code>L.Point</code>&gt;</p></blockquote>',14)]))}const x=e(n,[["render",i]]);export{h as __pageData,x as default};
