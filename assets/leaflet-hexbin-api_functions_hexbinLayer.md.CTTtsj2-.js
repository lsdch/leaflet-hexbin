import{_ as a,c as t,o as r,aJ as n}from"./chunks/framework.BfDXmAJF.js";const p=JSON.parse('{"title":"Function: hexbinLayer()","description":"","frontmatter":{},"headers":[],"relativePath":"leaflet-hexbin-api/functions/hexbinLayer.md","filePath":"leaflet-hexbin-api/functions/hexbinLayer.md"}'),i={name:"leaflet-hexbin-api/functions/hexbinLayer.md"};function o(c,e,s,l,h,d){return r(),t("div",null,e[0]||(e[0]=[n('<p><a href="./../globals.html">leaflet-hexbin</a> / hexbinLayer</p><h1 id="function-hexbinlayer" tabindex="-1">Function: hexbinLayer() <a class="header-anchor" href="#function-hexbinlayer" aria-label="Permalink to “Function: hexbinLayer()”">​</a></h1><blockquote><p><strong>hexbinLayer</strong>&lt;<code>Data</code>&gt;(<code>options?</code>): <a href="./../classes/HexbinLayer.html"><code>HexbinLayer</code></a>&lt;<code>Data</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/lsdch/leaflet-hexbin/blob/a3b561044c5c8718cf99c39b0b9378d868a156df/packages/leaflet-hexbin/src/HexbinLayer.ts#L874" target="_blank" rel="noreferrer">HexbinLayer.ts:874</a></p><p>Factory function to instanciate a new hexbin layer</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to “Type Parameters”">​</a></h2><h3 id="data" tabindex="-1">Data <a class="header-anchor" href="#data" aria-label="Permalink to “Data”">​</a></h3><p><code>Data</code> = <code>LatLngExpression</code></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to “Parameters”">​</a></h2><h3 id="options" tabindex="-1">options? <a class="header-anchor" href="#options" aria-label="Permalink to “options?”">​</a></h3><p><a href="./../interfaces/HexbinLayerConfig.html"><code>HexbinLayerConfig</code></a>&lt;<code>Data</code>&gt;</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to “Returns”">​</a></h2><p><a href="./../classes/HexbinLayer.html"><code>HexbinLayer</code></a>&lt;<code>Data</code>&gt;</p>',13)]))}const f=a(i,[["render",o]]);export{p as __pageData,f as default};
