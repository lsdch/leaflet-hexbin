import{_ as a,c as i,o as t,aJ as s}from"./chunks/framework.BfDXmAJF.js";const p=JSON.parse('{"title":"Interface: HexbinLayerConfig<Data>","description":"","frontmatter":{},"headers":[],"relativePath":"leaflet-hexbin-api/interfaces/HexbinLayerConfig.md","filePath":"leaflet-hexbin-api/interfaces/HexbinLayerConfig.md"}'),l={name:"leaflet-hexbin-api/interfaces/HexbinLayerConfig.md"};function n(r,e,o,h,d,c){return t(),i("div",null,e[0]||(e[0]=[s('<p><a href="./../globals.html">leaflet-hexbin</a> / HexbinLayerConfig</p><h1 id="interface-hexbinlayerconfig-data" tabindex="-1">Interface: HexbinLayerConfig&lt;Data&gt; <a class="header-anchor" href="#interface-hexbinlayerconfig-data" aria-label="Permalink to “Interface: HexbinLayerConfig&lt;Data&gt;”">​</a></h1><p>Defined in: <a href="https://github.com/lsdch/leaflet-hexbin/blob/95ad31697b789f572ae991ef833827f65beace2e/packages/leaflet-hexbin/src/HexbinLayer.ts#L34" target="_blank" rel="noreferrer">HexbinLayer.ts:34</a></p><p>Hexbin layer configuration options this can be provided when instantiating a new hexbin layer.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to “Type Parameters”">​</a></h2><h3 id="data" tabindex="-1">Data <a class="header-anchor" href="#data" aria-label="Permalink to “Data”">​</a></h3><p><code>Data</code></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to “Properties”">​</a></h2><h3 id="radius" tabindex="-1">radius? <a class="header-anchor" href="#radius" aria-label="Permalink to “radius?”">​</a></h3><blockquote><p><code>optional</code> <strong>radius</strong>: <code>number</code></p></blockquote><p>Defined in: <a href="https://github.com/lsdch/leaflet-hexbin/blob/95ad31697b789f572ae991ef833827f65beace2e/packages/leaflet-hexbin/src/HexbinLayer.ts#L42" target="_blank" rel="noreferrer">HexbinLayer.ts:42</a></p><p>Hex grid cell radius in pixels. This value should be a positive number. This radius controls the radius of the hexagons used to bin the data but not necessarily to draw each individual hexbin.</p><h4 id="default" tabindex="-1">Default <a class="header-anchor" href="#default" aria-label="Permalink to “Default”">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span></span></code></pre></div><hr><h3 id="opacity" tabindex="-1">opacity? <a class="header-anchor" href="#opacity" aria-label="Permalink to “opacity?”">​</a></h3><blockquote><p><code>optional</code> <strong>opacity</strong>: <code>number</code> | [<code>number</code>, <code>number</code>]</p></blockquote><p>Defined in: <a href="https://github.com/lsdch/leaflet-hexbin/blob/95ad31697b789f572ae991ef833827f65beace2e/packages/leaflet-hexbin/src/HexbinLayer.ts#L49" target="_blank" rel="noreferrer">HexbinLayer.ts:49</a></p><p>Sets the opacity on the hexbin layer. This value should be a number between 0 and 1. If an array is provided, the first element is the minimum opacity and the second is the maximum.</p><h4 id="default-1" tabindex="-1">Default <a class="header-anchor" href="#default-1" aria-label="Permalink to “Default”">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.6</span></span></code></pre></div><hr><h3 id="opacityscaleextent" tabindex="-1">opacityScaleExtent? <a class="header-anchor" href="#opacityscaleextent" aria-label="Permalink to “opacityScaleExtent?”">​</a></h3><blockquote><p><code>optional</code> <strong>opacityScaleExtent</strong>: [<code>number</code>, <code>undefined</code> | <code>number</code>]</p></blockquote><p>Defined in: <a href="https://github.com/lsdch/leaflet-hexbin/blob/95ad31697b789f572ae991ef833827f65beace2e/packages/leaflet-hexbin/src/HexbinLayer.ts#L54" target="_blank" rel="noreferrer">HexbinLayer.ts:54</a></p><p>Opacity scale extent: [min, max] domain for opacity interpolation.</p><h4 id="default-2" tabindex="-1">Default <a class="header-anchor" href="#default-2" aria-label="Permalink to “Default”">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><hr><h3 id="duration" tabindex="-1">duration? <a class="header-anchor" href="#duration" aria-label="Permalink to “duration?”">​</a></h3><blockquote><p><code>optional</code> <strong>duration</strong>: <code>number</code></p></blockquote><p>Defined in: <a href="https://github.com/lsdch/leaflet-hexbin/blob/95ad31697b789f572ae991ef833827f65beace2e/packages/leaflet-hexbin/src/HexbinLayer.ts#L59" target="_blank" rel="noreferrer">HexbinLayer.ts:59</a></p><p>Duration of transition in milliseconds.</p><h4 id="default-3" tabindex="-1">Default <a class="header-anchor" href="#default-3" aria-label="Permalink to “Default”">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span></span></code></pre></div><hr><h3 id="colorscaleextent" tabindex="-1">colorScaleExtent? <a class="header-anchor" href="#colorscaleextent" aria-label="Permalink to “colorScaleExtent?”">​</a></h3><blockquote><p><code>optional</code> <strong>colorScaleExtent</strong>: [<code>number</code>, <code>undefined</code> | <code>number</code>]</p></blockquote><p>Defined in: <a href="https://github.com/lsdch/leaflet-hexbin/blob/95ad31697b789f572ae991ef833827f65beace2e/packages/leaflet-hexbin/src/HexbinLayer.ts#L65" target="_blank" rel="noreferrer">HexbinLayer.ts:65</a></p><p>Color scale extent: [min, max] domain for color interpolation.</p><h4 id="default-4" tabindex="-1">Default <a class="header-anchor" href="#default-4" aria-label="Permalink to “Default”">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><hr><h3 id="colordomain" tabindex="-1">colorDomain? <a class="header-anchor" href="#colordomain" aria-label="Permalink to “colorDomain?”">​</a></h3><blockquote><p><code>optional</code> <strong>colorDomain</strong>: <code>null</code> | <code>number</code>[]</p></blockquote><p>Defined in: <a href="https://github.com/lsdch/leaflet-hexbin/blob/95ad31697b789f572ae991ef833827f65beace2e/packages/leaflet-hexbin/src/HexbinLayer.ts#L73" target="_blank" rel="noreferrer">HexbinLayer.ts:73</a></p><p>This is used to override the default behavior, which is to derive the color domain from the data. Normally, you can tweak the generation of the color domain using the colorScaleExtent option. However, if you want to set a completely custom domain, you can provide it as an array of values with this option. The array of values will be passed directly into the domain of the color scale before rendering.</p><h4 id="default-5" tabindex="-1">Default <a class="header-anchor" href="#default-5" aria-label="Permalink to “Default”">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span></span></code></pre></div><hr><h3 id="colorrange" tabindex="-1">colorRange? <a class="header-anchor" href="#colorrange" aria-label="Permalink to “colorRange?”">​</a></h3><blockquote><p><code>optional</code> <strong>colorRange</strong>: <code>string</code>[]</p></blockquote><p>Defined in: <a href="https://github.com/lsdch/leaflet-hexbin/blob/95ad31697b789f572ae991ef833827f65beace2e/packages/leaflet-hexbin/src/HexbinLayer.ts#L78" target="_blank" rel="noreferrer">HexbinLayer.ts:78</a></p><p>Color range used to fill the hexbins.</p><h4 id="default-6" tabindex="-1">Default <a class="header-anchor" href="#default-6" aria-label="Permalink to “Default”">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#f7fbff&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#08306b&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><hr><h3 id="radiusscaleextent" tabindex="-1">radiusScaleExtent? <a class="header-anchor" href="#radiusscaleextent" aria-label="Permalink to “radiusScaleExtent?”">​</a></h3><blockquote><p><code>optional</code> <strong>radiusScaleExtent</strong>: [<code>number</code>, <code>undefined</code> | <code>number</code>]</p></blockquote><p>Defined in: <a href="https://github.com/lsdch/leaflet-hexbin/blob/95ad31697b789f572ae991ef833827f65beace2e/packages/leaflet-hexbin/src/HexbinLayer.ts#L84" target="_blank" rel="noreferrer">HexbinLayer.ts:84</a></p><p>Radius scale extent: [min, max] domain for radius interpolation.</p><h4 id="default-7" tabindex="-1">Default <a class="header-anchor" href="#default-7" aria-label="Permalink to “Default”">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><hr><h3 id="radiusdomain" tabindex="-1">radiusDomain? <a class="header-anchor" href="#radiusdomain" aria-label="Permalink to “radiusDomain?”">​</a></h3><blockquote><p><code>optional</code> <strong>radiusDomain</strong>: <code>null</code> | <code>number</code>[]</p></blockquote><p>Defined in: <a href="https://github.com/lsdch/leaflet-hexbin/blob/95ad31697b789f572ae991ef833827f65beace2e/packages/leaflet-hexbin/src/HexbinLayer.ts#L92" target="_blank" rel="noreferrer">HexbinLayer.ts:92</a></p><p>This is used to override the default behavior, which is to derive the radius domain from the data. Normally, you can tweak the generation of the radius domain using the radiusScaleExtent option. However, if you want to set a completely custom domain, you can provide it as an array of values with this option. The array of values will be passed directly into the domain of the radius scale before rendering.</p><h4 id="default-8" tabindex="-1">Default <a class="header-anchor" href="#default-8" aria-label="Permalink to “Default”">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span></span></code></pre></div><hr><h3 id="radiusrange" tabindex="-1">radiusRange? <a class="header-anchor" href="#radiusrange" aria-label="Permalink to “radiusRange?”">​</a></h3><blockquote><p><code>optional</code> <strong>radiusRange</strong>: <code>null</code> | [<code>number</code>, <code>number</code>]</p></blockquote><p>Defined in: <a href="https://github.com/lsdch/leaflet-hexbin/blob/95ad31697b789f572ae991ef833827f65beace2e/packages/leaflet-hexbin/src/HexbinLayer.ts#L97" target="_blank" rel="noreferrer">HexbinLayer.ts:97</a></p><p>Sets the range of the radius scale used to size the hexbins.</p><h4 id="default-9" tabindex="-1">Default <a class="header-anchor" href="#default-9" aria-label="Permalink to “Default”">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hex grid cell radius</span></span></code></pre></div><hr><h3 id="pointerevents" tabindex="-1">pointerEvents? <a class="header-anchor" href="#pointerevents" aria-label="Permalink to “pointerEvents?”">​</a></h3><blockquote><p><code>optional</code> <strong>pointerEvents</strong>: <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/lsdch/leaflet-hexbin/blob/95ad31697b789f572ae991ef833827f65beace2e/packages/leaflet-hexbin/src/HexbinLayer.ts#L103" target="_blank" rel="noreferrer">HexbinLayer.ts:103</a></p><p>You should only modify this config option if you want to change the mouse event behavior on hexbins. This will modify when the events are propagated based on the visibility state and/or part of the hexbin being hovered.</p><h4 id="default-10" tabindex="-1">Default <a class="header-anchor" href="#default-10" aria-label="Permalink to “Default”">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;all&#39;</span></span></code></pre></div><hr><h3 id="noredraw" tabindex="-1">noRedraw? <a class="header-anchor" href="#noredraw" aria-label="Permalink to “noRedraw?”">​</a></h3><blockquote><p><code>optional</code> <strong>noRedraw</strong>: <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/lsdch/leaflet-hexbin/blob/95ad31697b789f572ae991ef833827f65beace2e/packages/leaflet-hexbin/src/HexbinLayer.ts#L109" target="_blank" rel="noreferrer">HexbinLayer.ts:109</a></p><p>If true, the layer will not be redrawn after data changes and hover handler binding.</p><h4 id="default-11" tabindex="-1">Default <a class="header-anchor" href="#default-11" aria-label="Permalink to “Default”">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre></div><hr><h3 id="colorbinding" tabindex="-1">colorBinding? <a class="header-anchor" href="#colorbinding" aria-label="Permalink to “colorBinding?”">​</a></h3><blockquote><p><code>optional</code> <strong>colorBinding</strong>: <a href="./../type-aliases/ScaleBinding.html"><code>ScaleBinding</code></a>&lt;<code>Data</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/lsdch/leaflet-hexbin/blob/95ad31697b789f572ae991ef833827f65beace2e/packages/leaflet-hexbin/src/HexbinLayer.ts#L111" target="_blank" rel="noreferrer">HexbinLayer.ts:111</a></p><hr><h3 id="radiusbinding" tabindex="-1">radiusBinding? <a class="header-anchor" href="#radiusbinding" aria-label="Permalink to “radiusBinding?”">​</a></h3><blockquote><p><code>optional</code> <strong>radiusBinding</strong>: <a href="./../type-aliases/ScaleBinding.html"><code>ScaleBinding</code></a>&lt;<code>Data</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/lsdch/leaflet-hexbin/blob/95ad31697b789f572ae991ef833827f65beace2e/packages/leaflet-hexbin/src/HexbinLayer.ts#L112" target="_blank" rel="noreferrer">HexbinLayer.ts:112</a></p><hr><h3 id="opacitybinding" tabindex="-1">opacityBinding? <a class="header-anchor" href="#opacitybinding" aria-label="Permalink to “opacityBinding?”">​</a></h3><blockquote><p><code>optional</code> <strong>opacityBinding</strong>: <a href="./../type-aliases/ScaleBinding.html"><code>ScaleBinding</code></a>&lt;<code>Data</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/lsdch/leaflet-hexbin/blob/95ad31697b789f572ae991ef833827f65beace2e/packages/leaflet-hexbin/src/HexbinLayer.ts#L113" target="_blank" rel="noreferrer">HexbinLayer.ts:113</a></p><hr><h3 id="fill" tabindex="-1">fill()? <a class="header-anchor" href="#fill" aria-label="Permalink to “fill()?”">​</a></h3><blockquote><p><code>optional</code> <strong>fill</strong>: (<code>d</code>) =&gt; <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/lsdch/leaflet-hexbin/blob/95ad31697b789f572ae991ef833827f65beace2e/packages/leaflet-hexbin/src/HexbinLayer.ts#L114" target="_blank" rel="noreferrer">HexbinLayer.ts:114</a></p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to “Parameters”">​</a></h4><h5 id="d" tabindex="-1">d <a class="header-anchor" href="#d" aria-label="Permalink to “d”">​</a></h5><p><a href="./../type-aliases/HexbinData.html"><code>HexbinData</code></a>&lt;<code>Data</code>&gt;[]</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to “Returns”">​</a></h4><p><code>string</code></p>',112)]))}const f=a(l,[["render",n]]);export{p as __pageData,f as default};
